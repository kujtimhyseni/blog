[{"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\index.js":"1","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\serviceWorker.js":"2","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\App.js":"3","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\css-common.js":"4","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\add-post.component.js":"5","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\posts-list.component.js":"6","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\post.component.js":"7","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\services\\post.service.js":"8","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\http-common.js":"9"},{"size":566,"mtime":1612052420234,"results":"10","hashOfConfig":"11"},{"size":5227,"mtime":1612052420235,"results":"12","hashOfConfig":"11"},{"size":1502,"mtime":1612052420225,"results":"13","hashOfConfig":"11"},{"size":1620,"mtime":1612052420233,"results":"14","hashOfConfig":"11"},{"size":5279,"mtime":1612052420228,"results":"15","hashOfConfig":"11"},{"size":5509,"mtime":1612052420232,"results":"16","hashOfConfig":"11"},{"size":8233,"mtime":1612052420231,"results":"17","hashOfConfig":"11"},{"size":544,"mtime":1612052420236,"results":"18","hashOfConfig":"11"},{"size":166,"mtime":1612052420233,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"k0b3ja",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\index.js",[],["40","41","42"],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\serviceWorker.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\App.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\css-common.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\add-post.component.js",["43"],"import React, { Component } from \"react\";\r\nimport PostDataService from \"../services/post.service\";\r\nimport _ from 'lodash';\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { TextField, Button, withStyles } from \"@material-ui/core\"\r\nimport { styles } from \"../css-common\"\r\n\r\nclass AddPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.savePost = this.savePost.bind(this);\r\n        this.newPost = this.newPost.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            tags: [],\r\n            published: false,\r\n\r\n            submitted: false\r\n        };\r\n    }\r\n\r\n    onChangeTitle(e) {\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e) {\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n\r\n    handleAddTag = (tag) => {\r\n        this.setState({\r\n        tags: [...this.state.tags, tag]\r\n        });\r\n    }\r\n\r\n    handleDeleteTag = (tag) => {\r\n        this.setState({\r\n        tags: _.without(this.state.tags, tag)\r\n        });\r\n    }\r\n\r\n    savePost() {\r\n        var data = {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            tags: this.state.tags\r\n        };\r\n        this.setState({\r\n            id: data.id,\r\n            title: data.title,\r\n            description: data.description,\r\n            published: data.published,\r\n            tags: data.tags,\r\n            submitted: true\r\n        });\r\n        //TODO: Uncomment code after integrating with backend\r\n        // PostDataService.create(data)\r\n        //     .then(response => {\r\n        //         this.setState({\r\n        //             id: response.data.id,\r\n        //             title: response.data.title,\r\n        //             description: response.data.description,\r\n        //             published: response.data.published,\r\n        //             tags: response.data.tags,\r\n        //             submitted: true\r\n        //         });\r\n        //         console.log(response.data);\r\n        //     })\r\n        //     .catch(e => {\r\n        //         console.log(e);\r\n        //     });\r\n    }\r\n\r\n    newPost() {\r\n        this.setState({\r\n            id: null,\r\n            title: \"\",\r\n            description: \"\",\r\n            published: false,\r\n            tags: [],\r\n            submitted: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.submitted ? (\r\n                    <div className={classes.form}>\r\n                        <h4>You submitted successfully!</h4>\r\n                        <Button\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            onClick={this.newPost}>\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                        <div className={classes.form}>\r\n                            <div className={classes.textField}>\r\n                                <TextField\r\n                                    label=\"Title\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.onChangeTitle}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={classes.textField}>\r\n                                <TextField\r\n                                    label=\"Description\"\r\n                                    name=\"description\"\r\n                                    rows={3}\r\n                                    rowsMax={5}\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className={classes.textField}>\r\n                                <ChipInput\r\n                                    label=\"Tags\"\r\n                                    value={this.state.tags}\r\n                                    onAdd={(tag) => this.handleAddTag(tag)}\r\n                                    onDelete={(tag, index) => this.handleDeleteTag(tag, index)}\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <Button\r\n                                size=\"small\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                onClick={this.savePost}>\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddPost)","C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\posts-list.component.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\components\\post.component.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\services\\post.service.js",[],"C:\\Users\\Kujtim Hyseni\\blog-website\\blog_frontend\\src\\http-common.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":23},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'PostDataService' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]